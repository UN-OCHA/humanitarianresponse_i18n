<?php
/**
 * @file
 */

include_once('humanitarianresponse_i18n.features.inc');

/**
 * Implements hook_i18n_object_info_alter(&$info)
 */
function humanitarianresponse_i18n_i18n_object_info_alter(&$info) {
  $info['taxonomy_term']['key'] = 'uuid';
  $info['taxonomy_vocabulary']['key'] = 'machine_name';
  $info['menu_link']['key'] = 'uuid';
}

/**
 * Implements hook_uuid_sync()
 */
function humanitarianresponse_i18n_uuid_sync() {
  module_load_include('inc', 'uuid', 'uuid.features.menu');
  $items = db_select('menu_links', 'm')
      ->fields('m')
      ->execute()
      ->fetchAllAssoc('mlid', PDO::FETCH_ASSOC);
  foreach ($items as $item) {
    if (empty($item['uuid'])) {
      $copy = $item;
      uuid_menu_link_make_universal($copy);
      $uuid = $copy['uuid_menu_name'].':'.$copy['uuid_link_path'];
      $item['uuid'] = $uuid;
      db_update('menu_links')
        ->fields(array(
          'uuid' => $uuid
        ))
        ->condition('mlid', $item['mlid'])
        ->execute();
    }
  }
}

/**
 * Implements hook_menu_link_insert()
 */
function humanitarianresponse_i18n_menu_link_insert($link) {
  module_load_include('inc', 'uuid', 'uuid.features.menu');
  uuid_menu_link_make_universal($link);
  $uuid = $link['uuid_menu_name'].':'.$link['uuid_link_path'];
  db_update('menu_links')
    ->fields(array(
      'uuid' => $uuid,
    ))
    ->condition('mlid', $link['mlid'])
    ->execute();
}

/**
 * Implements hook_field_info_alter()
 */
function humanitarianresponse_i18n_field_info_alter(&$info) {

db_update('system')
    ->fields(array('weight' => 10))
    ->condition('name', 'humanitarianresponse_i18n')
    ->execute();
    
  // Translate field values.
  $info['taxonomy_term_reference']['options_list_callback'] = 'humanitarianresponse_i18n_allowed_values';
}

/**
 * Returns the set of valid terms for a taxonomy field.
 *
 * @param $field
 *   The field definition.
 * @return
 *   The array of valid terms for this field, keyed by term id.
 */
function humanitarianresponse_i18n_allowed_values($field) {
  $options = array();
  foreach ($field['settings']['allowed_values'] as $tree) {
    if ($vocabulary = taxonomy_vocabulary_machine_name_load($tree['vocabulary'])) {
      if ($terms = taxonomy_get_tree($vocabulary->vid, $tree['parent'])) {
        foreach ($terms as $term) {
          $options[$term->tid] = str_repeat('-', $term->depth) . 'test';
        }
      }
    }
  }
  return $options;
}
    
function humanitarianresponse_i18n_taxonomy_term_load($terms) {
  /*$tids = array_keys($terms);
  foreach ($tids as $tid) {
    $terms[$tid]->name = 'Test';
  }*/
}
